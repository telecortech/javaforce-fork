/**
 * Created : Mar 25, 2012
 *
 * @author pquiring
 */

import java.awt.*;

import javaforce.*;

public class VideoFrame extends javax.swing.JFrame {

  /**
   * Creates new form VideoFrame
   */
  public VideoFrame(String title, MainPanel panel) {
    this.panel = panel;
    initComponents();
    setTitle(title);
    setSize(256, 256);
    setPosition();
//    setExtendedState(getExtendedState() | javax.swing.JFrame.MAXIMIZED_BOTH);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
    setTitle("random-%d");
    setMinimumSize(new java.awt.Dimension(64, 64));
    addWindowListener(new java.awt.event.WindowAdapter() {
      public void windowClosing(java.awt.event.WindowEvent evt) {
        formWindowClosing(evt);
      }
    });
    addComponentListener(new java.awt.event.ComponentAdapter() {
      public void componentResized(java.awt.event.ComponentEvent evt) {
        formComponentResized(evt);
      }
    });
    getContentPane().setLayout(new java.awt.GridLayout(1, 0));

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
    MainPanel.closingVideoFrame();
    dispose();
  }//GEN-LAST:event_formWindowClosing

  private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
    panel.setVideoSize(getVideoWidth(), getVideoHeight());
  }//GEN-LAST:event_formComponentResized

  // Variables declaration - do not modify//GEN-BEGIN:variables
  // End of variables declaration//GEN-END:variables

  private MainPanel panel;
  private JFImage img, new_img;
  private boolean needPainting = false;

  public void setTitle(String str) {
    super.setTitle(str);
  }
  public void setImage(JFImage src) {
    //assigns image and scales if needed
    int sx = getWidth();
    int sy = getHeight();
    int ix = src.getWidth();
    int iy = src.getHeight();
    if (((ix != sx) || (iy != sy))) {
      JFImage scaled = new JFImage();
      scaled.setImageSize(sx, sy);
      scaled.getGraphics().drawImage(src.getImage(), 0,0, sx-1,sy-1, 0,0, ix-1,iy-1, null);
      new_img = scaled;
    } else {
      new_img = src;
    }
    if (needPainting) {
      JFLog.log("Video updating too slow");
      return;
    }
    needPainting = true;
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        img = new_img;
        repaint();
      }
    });
  }
  public void paint(Graphics g) {
    if (!needPainting) {
      JFLog.log("VideoFrame:not painting");
      return;
    }
    if (img == null) {
      g.fillRect(0, 0, getWidth(), getHeight());
    } else {
      g.drawImage(img.getImage(), 0, 0, null);
    }
    needPainting = false;
  }
  public int getVideoWidth() {
    return getContentPane().getWidth();
  }
  public int getVideoHeight() {
    return getContentPane().getHeight();
  }
  private void setPosition() {
    Dimension d = getSize();
    Rectangle s = GraphicsEnvironment.getLocalGraphicsEnvironment().getMaximumWindowBounds();
    if ((d.width > s.width) || (d.height > s.height)) {
      if (d.width > s.width) d.width = s.width;
      if (d.height > s.height) d.height = s.height;
      setSize(d);
    }
    setLocation(s.width/2 - d.width/2, s.height/2 - d.height/2);
  }
}
