
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import javaforce.JFLog;
import javaforce.XML;
import javaforce.linux.Linux;

/**
 * Created : Apr 17, 2012
 *
 * @author pquiring
 */

public class GlobalPanel extends javax.swing.JPanel {

  /**
   * Creates new form GlobalPanel
   */
  public GlobalPanel() {
    initComponents();
    loadConfig();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        back = new javax.swing.JButton();
        apply = new javax.swing.JButton();
        disableSleep = new javax.swing.JCheckBox();

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        back.setText("< Back");
        back.setFocusable(false);
        back.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        back.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        jToolBar1.add(back);

        apply.setText("Apply");
        apply.setFocusable(false);
        apply.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        apply.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        apply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyActionPerformed(evt);
            }
        });
        jToolBar1.add(apply);

        disableSleep.setText("Disable Sleep,Shutdown,Reboot from Desktop");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(disableSleep)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(disableSleep)
                .addGap(0, 314, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

  private void applyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyActionPerformed
    saveConfig();
  }//GEN-LAST:event_applyActionPerformed

  private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
    ConfigApp.This.setPanel(new MainPanel());
  }//GEN-LAST:event_backActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton apply;
    private javax.swing.JButton back;
    private javax.swing.JCheckBox disableSleep;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

  public static class Config {
    public boolean disableSleep;
  }

  private Config config = new Config();
  private String configFolder = "/etc/jconfig.d/";
  private String configFile = "global.xml";

  private void loadConfig() {
    try {
      XML xml = new XML();
      FileInputStream fis = new FileInputStream(configFolder + configFile);
      xml.read(fis);
      xml.writeClass(config);
    } catch (FileNotFoundException e1) {
      defaultConfig();
    } catch (Exception e2) {
      JFLog.log(e2);
      defaultConfig();
    }
    updateConfig();
  }

  private void defaultConfig() {
    config = new Config();
    config.disableSleep = false;
  }

  private void updateConfig() {
    disableSleep.setSelected(config.disableSleep);
  }

  private void saveConfig() {
    //save config to configFile
    config.disableSleep = disableSleep.isSelected();
    try {
      XML xml = new XML();
      File tmpFile = File.createTempFile("global", ".xml");
      FileOutputStream fos = new FileOutputStream(tmpFile);
      xml.readClass("global", config);
      xml.write(fos);
      fos.close();
      Linux.mkdir(configFolder);
      if (!Linux.copyFile(tmpFile.getAbsolutePath(), configFolder + configFile)) {
        tmpFile.delete();
        throw new Exception("file io error");
      }
      tmpFile.delete();
    } catch (Exception e) {
      JFLog.log(e);
    }
  }
}
